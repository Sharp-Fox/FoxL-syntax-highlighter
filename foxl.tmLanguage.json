{
    "$schema": "https://json.schemastore.org/tmLanguage",
    "name": "Foxl",
    "scopeName": "source.foxl",

    "patterns": [
        {
            "include": "#keywords"
        },
        {
            "include": "#functions"
        },
        {
            "include": "#identifiers"
        },
        {
            "include": "#numbers"
        },
        {
            "include": "#operators"
        },
        {
            "include": "#symbols"
        },
        {
            "include": "#string-literals"
        },
        {
            "include": "#comments"
        },
        {
            "include": "#unknown"
        }
    ],

    "repository": {
        "keywords": {
            "match": "\\b(if|else|while|return|int|float|char|write|read|func|for|str|bool|double|include|let)\\b",
            "name": "keyword.control"
        },
        "functions": {
            "match": "\\b(write|read|include)\\b",
            "name": "support.function"
        },
        "identifiers": {
            "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b",
            "name": "variable"
        },
        "numbers": {
            "match": "\\b\\d+(\\.\\d+)?\\b",
            "name": "constant.numeric"
        },
        "operators": {
            "match": "[\\+\\-\\*/=!><]+",
            "name": "keyword.operator"
        },
        "symbols": {
            "match": "[\\(\\)\\{\\},\\[\\];]+",
            "name": "punctuation"
        },
        "string-literals": {
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "match": "\\\\(n|t|\\\"|\\\\|\\')",
                    "name": "constant.character.escape"
                },
                {
                    "match": "\\\\.",
                    "name": "invalid.illegal"
                }
            ],
            "name": "string.quoted.double"
        },
        "comments": {
            "begin": "//",
            "end": "$",
            "name": "comment.line.double-slash",
            "patterns": [
                {
                    "match": ".+",
                    "name": "comment.line.double-slash"
                }
            ]
        },
        "unknown": {
            "match": ".",
            "name": "invalid.illegal"
        }
    }
}
